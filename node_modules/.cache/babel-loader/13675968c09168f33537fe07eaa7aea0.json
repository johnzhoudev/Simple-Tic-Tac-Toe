{"ast":null,"code":"var _jsxFileName = \"/Users/johnzhou/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/*\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n*/\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n        squares: Array(9).fill(null),\n        xIsNext: true,\n    };\n  \n  }\n  */\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    });\n  } //        <div className=\"status\">{status}</div>\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        clicked: null\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares_new = current.squares.slice(); //makes a copy of the array\n\n    if (calculateWinner(squares_new) || squares_new[i]) {\n      //no change if filled already\n      return;\n    }\n\n    if (this.state.xIsNext) {\n      squares_new[i] = 'X';\n    } else {\n      squares_new[i] = 'O';\n    } //squares_new[i] = this.state.xIsNext ? 'X' : 'O'; //cool syntax\n\n\n    this.setState({\n      history: history.concat([{\n        squares: squares_new,\n        clicked: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      //takes in item, and index\n      const last_move_str = '(' + row(step.clicked) + ', ' + col(step.clicked) + ')';\n      const desc = move ? 'Go to move #' + move + ' ' + last_move_str : 'Go to game start';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  //Collection of potential winning paths\n  const paths = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; //For each path, check if a winner\n\n  for (let i = 0; i < paths.length; ++i) {\n    const [a, b, c] = paths[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]; //'X' or 'O'\n    }\n  }\n\n  return null;\n}\n\nfunction row(square) {\n  return Math.floor((square + 2) / 3) + 1;\n}\n\nfunction col(square) {\n  let pos = square % 3;\n\n  if (!pos) {\n    pos = 3;\n  }\n\n  return pos;\n}","map":{"version":3,"sources":["/Users/johnzhou/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","clicked","stepNumber","xIsNext","handleClick","slice","current","length","squares_new","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","last_move_str","row","col","desc","status","document","getElementById","paths","a","b","c","square","Math","floor","pos"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/*\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n*/\n\nfunction Square(props) {\n  return(\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n        squares: Array(9).fill(null),\n        xIsNext: true,\n    };\n  \n  }\n  */\n\n\n  renderSquare(i) {\n    return (\n        <Square \n            value={this.props.squares[i]} \n            onClick={() => this.props.onClick(i)}\n        />\n    );\n  }\n//        <div className=\"status\">{status}</div>\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        clicked: null,\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];   \n\n    const squares_new = current.squares.slice(); //makes a copy of the array\n    if (calculateWinner(squares_new) || squares_new[i]) { //no change if filled already\n      return;\n    }\n\n    if (this.state.xIsNext) {\n      squares_new[i] = 'X';\n    } else {\n      squares_new[i] = 'O';\n    }\n\n    //squares_new[i] = this.state.xIsNext ? 'X' : 'O'; //cool syntax\n    this.setState({history: history.concat([{\n      squares: squares_new,\n      clicked: i,\n    }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,});\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => { //takes in item, and index\n      const last_move_str = '(' + row(step.clicked) + ', ' + col(step.clicked) + ')';\n      const desc = move ?\n        'Go to move #' + move + ' ' + last_move_str:\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n\n        );\n    });\n\n\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n\n  //Collection of potential winning paths\n  const paths = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  //For each path, check if a winner\n  for (let i = 0; i < paths.length; ++i) {\n    const [a, b, c] = paths[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\n      return squares[a]; //'X' or 'O'\n    } \n\n  }\n  return null;\n}\n\nfunction row(square) {\n  return Math.floor((square + 2) / 3) + 1;\n}\n\nfunction col(square) {\n  let pos = (square % 3);\n  if (!pos) {\n    pos = 3;\n  }\n\n  return pos;\n\n}"]},"metadata":{},"sourceType":"module"}