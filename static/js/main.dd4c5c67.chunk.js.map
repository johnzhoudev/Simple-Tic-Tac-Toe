{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","value","Board","i","styles","this","squares","box","regular_style","highlighted_style","background","j","k","winning_path","push","renderSquare","createBox","React","Component","Game","state","history","Array","fill","clicked","stepNumber","xIsNext","historyReverseOrder","slice","squares_new","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","square","last_move_str","Math","floor","col","desc","key","jumpTo","fontWeight","reverse","tie","handleClick","id","toggleOrder","paths","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd4c5c67.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/*\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button \n        className=\"square\" \n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n*/\n\nfunction Square(props) {\n  return(\n    <button className=\"square\" onClick={props.onClick} style={props.style}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n        squares: Array(9).fill(null),\n        xIsNext: true,\n    };\n  \n  }\n  */\n\n\n  renderSquare(i, styles) {\n    return (\n        <Square \n            value={this.props.squares[i]} \n            onClick={() => this.props.onClick(i)}\n            style={styles}\n        />\n    );\n  }\n//        <div className=\"status\">{status}</div>\n\ncreateBox() { //so things are really just arrays\n  let box = [];\n\n  const regular_style = {};\n  const highlighted_style = {\n    background: 'grey',\n    //border: '1px solid #000'\n  }\n\n\n  for (let i = 0; i < 3; ++i) {\n    let squares = [];\n\n    for (let j = 0; j < 3; ++j) {\n      let style = regular_style;\n\n      //check if winner\n      for (let k = 0; k < 3; ++k) {\n        if ((this.props.winning_path) && ((j + i * 3) == this.props.winning_path[k])) {\n          style = highlighted_style;\n        }\n      }\n\n      squares.push(this.renderSquare((j + i * 3), style));\n    }\n\n    box.push(<div>{squares}</div>);\n\n  }\n\n  return box;\n}\n\n  render() {\n    return (\n      /*\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n*/\n      this.createBox()\n      \n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        clicked: null,\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      historyReverseOrder: false,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];   \n\n    const squares_new = current.squares.slice(); //makes a copy of the array\n    if (calculateWinner(squares_new) || squares_new[i]) { //no change if filled already\n      return;\n    }\n\n    if (this.state.xIsNext) {\n      squares_new[i] = 'X';\n    } else {\n      squares_new[i] = 'O';\n    }\n\n    //squares_new[i] = this.state.xIsNext ? 'X' : 'O'; //cool syntax\n    this.setState({history: history.concat([{\n      squares: squares_new,\n      clicked: i,\n    }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,});\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  toggleOrder() {\n    this.setState({\n      historyReverseOrder: !this.state.historyReverseOrder,\n    });\n  }\n\n  render() {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n\n    let moves = history.map((step, move) => { //takes in item, and index\n      const last_move_str = '(' + row(step.clicked) + ', ' + col(step.clicked) + ')';\n      let desc = move ?\n        'Go to move #' + move + ' ' + last_move_str:\n        'Go to game start';\n\n      const styles = {\n        fontWeight: \"bold\"\n      };\n\n      //If last move, bold \n      if (move == (history.length - 1)) {\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)} style={styles}>{desc}</button>\n          </li>\n        )\n      }\n\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n\n        );\n    });\n\n    moves = this.state.historyReverseOrder ? moves.reverse() : moves;\n\n\n    let status;\n    if (winner && winner.tie) {\n      status = \"Tie\";\n    } else if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    let winning_path = null;\n    if (winner) {\n      winning_path = winner.winning_path;\n    } \n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winning_path={winning_path}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n          <button id=\"toggle_order\" onClick={() => this.toggleOrder()}>Toggle Order</button>\n          <button id=\"reset_button\" onClick={() => this.jumpTo(0)}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n\n  //Collection of potential winning paths\n  const paths = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  //For each path, check if a winner\n\n  let tie = true;\n\n  for (let i = 0; i < paths.length; ++i) {\n    const [a, b, c] = paths[i];\n\n    if (!(squares[a] && squares[b] && squares[c])) {\n      tie = false;\n    }\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      \n      return {\n        winning_path: paths[i],\n        winner: squares[a],\n        tie: false,\n         //'X' or 'O'\n      };\n\n    }\n  }\n\n  if (tie) {\n    return {\n      winning_path: null,\n      winner: null,\n      tie: true}\n  }\n\n  return null;\n}\n\nfunction row(square) {\n  return Math.floor(square / 3) + 1;\n}\n\nfunction col(square) {\n  return square % 3 + 1;\n}"],"sourceRoot":""}